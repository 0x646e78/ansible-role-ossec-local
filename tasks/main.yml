---

- name: Include OS specific variables
  include_vars: "{{ ansible_os_family }}.yml"

### RedHat - Add Repo
- name: Add atomic repository
  template: src=atomic.repo.j2
            dest=/etc/yum.repos.d/atomic.repo
            owner=root
            group=root
            mode=0644
  when: ansible_os_family == 'RedHat'

# https://www.atomicorp.com/RPM-GPG-KEY.art.txt
- name: Add atomic GPG key
  copy: src=RPM-GPG-KEY.art.txt  
        dest=/etc/pki/rpm-gpg/RPM-GPG-KEY.art.txt 
        owner=root 
        group=root 
        mode=0644
  when: ansible_os_family == 'RedHat'

### Debian - Add Repo
- name: Install python-apt, a requirement for apt_repository
  apt:  name=python-apt 
        state=latest
  when: ansible_os_family == 'Debian'

- name: Add alienvault GPG key
  apt_key: url='http://ossec.alienvault.com/repos/apt/conf/ossec-key.gpg.key' 
           state=present
  when: ansible_os_family == 'Debian'

- name: Add alienvault apt repository
  apt_repository: repo='deb http://ossec.alienvault.com/repos/apt/debian wheezy main' 
                  state=present
  when: ansible_os_family == 'Debian'

### RedHat - Install OSSEC
- name: Install ossec server
  yum: name={{ pkg_name }}
       state=latest
  notify:
    - Initialize ossec
  when: ansible_os_family == 'RedHat'

- name: Install ossec authd init script
  template: src=ossec-authd.j2
            dest=/etc/init.d/ossec-authd
            owner=root 
            group=root
            mode=0755
  when: ansible_os_family == 'RedHat'

### Debian - Install OSSEC
- name: Install ossec server
  apt: name={{ pkg_name }}
       state=latest
  notify:
    - Initialize ossec
  when: ansible_os_family == 'Debian'

### Configure OSSEC
- name: Set ossec server config
  template: src=ossec-server.conf.j2 
            dest=/var/ossec/etc/ossec-server.conf
  notify:
    - Restart ossec
  when: ansible_os_family == 'RedHat'

- name: Set ossec server config
  template: src=ossec-server.conf.j2 
            dest=/var/ossec/etc/ossec.conf
  notify:
    - Restart ossec
  when: ansible_os_family == 'Debian'

- name: Copy local rules
  copy: src=local_rules.xml 
        dest=/var/ossec/rules

- name: Ensure ossec server is running and enabled at start up
  service: name={{ item }}
           state=started
           enabled=yes
  with_items:
    - "{{ service_name }}"
